(()=>{"use strict";var e,t={273:()=>{const e=window.wp.blocks,t=window.wp.i18n,a=window.wp.blockEditor,i=window.wp.components,n=window.ReactJSXRuntime,l=JSON.parse('{"UU":"wp-diana-widget/wp-diana-widget"}');(0,e.registerBlockType)(l.UU,{edit:function({attributes:e,setAttributes:l}){const o=(0,a.useBlockProps)(),{activityName:d,activityType:r,activityStartLocation:s,activityStartLocationType:p,activityEndLocation:w,activityEndLocationType:c,activityEarliestStartTime:g,activityLatestStartTime:_,activityEarliestEndTime:v,activityLatestEndTime:h,activityDurationMinutes:y,activityStartLocationDisplayName:u,activityEndLocationDisplayName:x,timezone:C,activityStartTimeLabel:b,activityEndTimeLabel:m,apiBaseUrl:T,language:D,overrideUserStartLocation:S,overrideUserStartLocationType:j,displayStartDate:L,displayEndDate:E,destinationInputName:f,containerMaxHeight:M,multiday:O,overrideActivityStartDate:A,overrideActivityEndDate:Y,activityDurationDaysFixed:H}=e,N=[{label:(0,t.__)("Coordinates (lat,lon)","wp-diana-widget"),value:"coordinates"},{label:(0,t.__)("Address","wp-diana-widget"),value:"address"},{label:(0,t.__)("Station ID","wp-diana-widget"),value:"station"}],k=[{label:(0,t.__)("English","wp-diana-widget"),value:"EN"},{label:(0,t.__)("German","wp-diana-widget"),value:"DE"}];return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(a.InspectorControls,{children:[(0,n.jsxs)(i.PanelBody,{title:(0,t.__)("Activity Details","wp-diana-widget"),initialOpen:!0,children:[(0,n.jsx)(i.TextControl,{label:(0,t.__)("Activity Name","wp-diana-widget"),value:d,onChange:e=>l({activityName:e}),help:(0,t.__)("e.g., Hiking Trip, Museum Visit","wp-diana-widget")}),(0,n.jsx)(i.TextControl,{label:(0,t.__)("Activity Type","wp-diana-widget"),value:r,onChange:e=>l({activityType:e}),help:(0,t.__)("Internal type identifier, e.g., Hiking, Sightseeing","wp-diana-widget")}),(0,n.jsx)(i.TextControl,{label:(0,t.__)("Activity Duration (minutes)","wp-diana-widget"),type:"number",value:y,onChange:e=>l({activityDurationMinutes:e}),help:(0,t.__)("e.g., 120 for 2 hours","wp-diana-widget")})]}),(0,n.jsxs)(i.PanelBody,{title:(0,t.__)("Start Location","wp-diana-widget"),initialOpen:!1,children:[(0,n.jsx)(i.TextareaControl,{label:(0,t.__)("Start Location (Coordinates or Address)","wp-diana-widget"),value:s,onChange:e=>l({activityStartLocation:e}),help:(0,t.__)('Enter coordinates as "lat,lon" or a full address.',"wp-diana-widget")}),(0,n.jsx)(i.SelectControl,{label:(0,t.__)("Start Location Type","wp-diana-widget"),value:p,options:N,onChange:e=>l({activityStartLocationType:e})}),(0,n.jsx)(i.TextControl,{label:(0,t.__)("Start Location Display Name (Optional)","wp-diana-widget"),value:u,onChange:e=>l({activityStartLocationDisplayName:e}),help:(0,t.__)("Custom name to display for the start location.","wp-diana-widget")})]}),(0,n.jsxs)(i.PanelBody,{title:(0,t.__)("End Location","wp-diana-widget"),initialOpen:!1,children:[(0,n.jsx)(i.TextareaControl,{label:(0,t.__)("End Location (Coordinates or Address)","wp-diana-widget"),value:w,onChange:e=>l({activityEndLocation:e}),help:(0,t.__)('Enter coordinates as "lat,lon" or a full address.',"wp-diana-widget")}),(0,n.jsx)(i.SelectControl,{label:(0,t.__)("End Location Type","wp-diana-widget"),value:c,options:N,onChange:e=>l({activityEndLocationType:e})}),(0,n.jsx)(i.TextControl,{label:(0,t.__)("End Location Display Name (Optional)","wp-diana-widget"),value:x,onChange:e=>l({activityEndLocationDisplayName:e}),help:(0,t.__)("Custom name to display for the end location.","wp-diana-widget")})]}),(0,n.jsxs)(i.PanelBody,{title:(0,t.__)("Activity Time Constraints","wp-diana-widget"),initialOpen:!1,children:[(0,n.jsx)(i.TextControl,{label:(0,t.__)("Earliest Start Time (HH:MM or HH:MM:SS)","wp-diana-widget"),value:g,onChange:e=>l({activityEarliestStartTime:e}),placeholder:"09:00:00"}),(0,n.jsx)(i.TextControl,{label:(0,t.__)("Latest Start Time (HH:MM or HH:MM:SS)","wp-diana-widget"),value:_,onChange:e=>l({activityLatestStartTime:e}),placeholder:"17:00:00"}),(0,n.jsx)(i.TextControl,{label:(0,t.__)("Earliest End Time (HH:MM or HH:MM:SS)","wp-diana-widget"),value:v,onChange:e=>l({activityEarliestEndTime:e}),placeholder:"10:00:00"}),(0,n.jsx)(i.TextControl,{label:(0,t.__)("Latest End Time (HH:MM or HH:MM:SS)","wp-diana-widget"),value:h,onChange:e=>l({activityLatestEndTime:e}),placeholder:"18:00:00"})]}),(0,n.jsxs)(i.PanelBody,{title:(0,t.__)("Localization & Display","wp-diana-widget"),initialOpen:!1,children:[(0,n.jsx)(i.TextControl,{label:(0,t.__)("Timezone","wp-diana-widget"),value:C,onChange:e=>l({timezone:e}),help:(0,n.jsxs)(n.Fragment,{children:[(0,t.__)("IANA timezone name, e.g., Europe/Vienna. ","wp-diana-widget"),(0,n.jsx)(i.ExternalLink,{href:"https://en.wikipedia.org/wiki/List_of_tz_database_time_zones",children:(0,t.__)("List of timezones","wp-diana-widget")})]}),placeholder:"Europe/Vienna"}),(0,n.jsx)(i.SelectControl,{label:(0,t.__)("Language","wp-diana-widget"),value:D,options:k,onChange:e=>l({language:e})}),(0,n.jsx)(i.TextControl,{label:(0,t.__)("Activity Start Time Label (Optional)","wp-diana-widget"),value:b,onChange:e=>l({activityStartTimeLabel:e}),help:(0,t.__)('Custom label for "Activity Start".',"wp-diana-widget")}),(0,n.jsx)(i.TextControl,{label:(0,t.__)("Activity End Time Label (Optional)","wp-diana-widget"),value:m,onChange:e=>l({activityEndTimeLabel:e}),help:(0,t.__)('Custom label for "Activity End".',"wp-diana-widget")}),(0,n.jsx)(i.TextControl,{label:(0,t.__)("Destination Input Name (Optional)","wp-diana-widget"),value:f,onChange:e=>l({destinationInputName:e}),help:(0,t.__)("Placeholder for the disabled input field for the destination.","wp-diana-widget")}),(0,n.jsx)(i.TextControl,{label:(0,t.__)("Display Start Date (Optional)","wp-diana-widget"),value:L,onChange:e=>l({displayStartDate:e}),help:(0,t.__)("Start date (YYYY-MM-DD) for widget visibility. If set, the widget will only display on or after this date.","wp-diana-widget"),placeholder:"YYYY-MM-DD"}),(0,n.jsx)(i.TextControl,{label:(0,t.__)("Display End Date (Optional)","wp-diana-widget"),value:E,onChange:e=>l({displayEndDate:e}),help:(0,t.__)("End date (YYYY-MM-DD) for widget visibility. If set, the widget will only display on or before this date.","wp-diana-widget"),placeholder:"YYYY-MM-DD"})]}),(0,n.jsxs)(i.PanelBody,{title:(0,t.__)("Multiday","wp-diana-widget"),initialOpen:!1,children:[(0,n.jsx)(i.ToggleControl,{label:(0,t.__)("Multiday","wp-diana-widget"),checked:O,onChange:e=>l({multiday:e})}),(0,n.jsx)(i.TextControl,{label:(0,t.__)("Override Activity Start Date (Optional)","wp-diana-widget"),value:A,onChange:e=>l({overrideActivityStartDate:e}),help:(0,t.__)("Override activity start date with this date. Can also be used to override Single-Day activity date.","wp-diana-widget"),placeholder:"YYYY-MM-DD"}),(0,n.jsx)(i.TextControl,{label:(0,t.__)("Override Activity End Date (Optional)","wp-diana-widget"),value:Y,onChange:e=>l({overrideActivityEndDate:e}),help:(0,t.__)("Override activity end date with this date.","wp-diana-widget"),placeholder:"YYYY-MM-DD"}),(0,n.jsx)(i.TextControl,{label:(0,t.__)("Activity Duration Days Fixed (Optional)","wp-diana-widget"),type:"number",value:H,onChange:e=>l({activityDurationDaysFixed:e}),help:(0,t.__)("Override activity duration in days with this value.","wp-diana-widget")})]}),(0,n.jsxs)(i.PanelBody,{title:(0,t.__)("Advanced & Styling","wp-diana-widget"),initialOpen:!1,children:[(0,n.jsx)(i.TextControl,{label:(0,t.__)("API Base URL","wp-diana-widget"),value:T,onChange:e=>l({apiBaseUrl:e}),help:(0,t.__)("Default: https://api.zuugle-services.net","wp-diana-widget")}),(0,n.jsx)(i.TextControl,{label:(0,t.__)("Widget Container Max Height","wp-diana-widget"),value:M,onChange:e=>l({containerMaxHeight:e}),help:(0,t.__)("e.g., 600px, 80vh, none. Default: 600px","wp-diana-widget"),placeholder:"600px"}),(0,n.jsx)(i.TextControl,{label:(0,t.__)("Override User Start Location","wp-diana-widget"),value:S,onChange:e=>l({overrideUserStartLocation:e}),help:(0,t.__)("Override user start location with this location.","wp-diana-widget")}),(0,n.jsx)(i.SelectControl,{label:(0,t.__)("Override User Start Location Type","wp-diana-widget"),value:j,options:N,onChange:e=>l({overrideUserStartLocationType:e})})]})]}),(0,n.jsx)("div",{...o,children:(0,n.jsxs)("div",{className:"wp-diana-widget-editor-preview",children:[(0,n.jsx)("h4",{children:(0,t.__)("Diana Activity Widget","wp-diana-widget")}),(0,n.jsxs)("p",{children:[(0,t.__)("Activity:","wp-diana-widget")," ",d||(0,t.__)("Not set","wp-diana-widget")]}),(0,n.jsx)("p",{children:(0,t.__)("This block will display the Diana Activity Widget on the frontend. Configure API credentials under Settings > Diana Widget.","wp-diana-widget")}),(0,n.jsx)("p",{children:(0,n.jsx)("em",{children:(0,t.__)("Frontend preview may differ.","wp-diana-widget")})})]})})]})}})}},a={};function i(e){var n=a[e];if(void 0!==n)return n.exports;var l=a[e]={exports:{}};return t[e](l,l.exports,i),l.exports}i.m=t,e=[],i.O=(t,a,n,l)=>{if(!a){var o=1/0;for(p=0;p<e.length;p++){for(var[a,n,l]=e[p],d=!0,r=0;r<a.length;r++)(!1&l||o>=l)&&Object.keys(i.O).every((e=>i.O[e](a[r])))?a.splice(r--,1):(d=!1,l<o&&(o=l));if(d){e.splice(p--,1);var s=n();void 0!==s&&(t=s)}}return t}l=l||0;for(var p=e.length;p>0&&e[p-1][2]>l;p--)e[p]=e[p-1];e[p]=[a,n,l]},i.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e={76:0,20:0};i.O.j=t=>0===e[t];var t=(t,a)=>{var n,l,[o,d,r]=a,s=0;if(o.some((t=>0!==e[t]))){for(n in d)i.o(d,n)&&(i.m[n]=d[n]);if(r)var p=r(i)}for(t&&t(a);s<o.length;s++)l=o[s],i.o(e,l)&&e[l]&&e[l][0](),e[l]=0;return i.O(p)},a=globalThis.webpackChunkwp_diana_widget=globalThis.webpackChunkwp_diana_widget||[];a.forEach(t.bind(null,0)),a.push=t.bind(null,a.push.bind(a))})();var n=i.O(void 0,[20],(()=>i(273)));n=i.O(n)})();