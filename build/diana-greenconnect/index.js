(()=>{"use strict";var e,n={697:()=>{const e=window.wp.blocks,n=window.wp.i18n,a=window.wp.blockEditor,t=window.wp.components,i=window.wp.element,o=window.ReactJSXRuntime,r=JSON.parse('{"UU":"diana-greenconnect/diana-greenconnect"}');(0,e.registerBlockType)(r.UU,{edit:function({attributes:e,setAttributes:r}){const l=(0,a.useBlockProps)(),{widgetId:c,activityName:d,activityType:s,activityStartLocation:g,activityStartLocationType:h,activityEndLocation:_,activityEndLocationType:p,activityEarliestStartTime:v,activityLatestStartTime:y,activityEarliestEndTime:u,activityLatestEndTime:x,activityDurationMinutes:C,activityStartLocationDisplayName:b,activityEndLocationDisplayName:T,timezone:m,activityStartTimeLabel:S,activityEndTimeLabel:L,apiBaseUrl:D,language:j,overrideUserStartLocation:f,overrideUserStartLocationType:w,displayStartDate:E,displayEndDate:M,destinationInputName:O,containerMaxHeight:Y,multiday:A,overrideActivityStartDate:k,overrideActivityEndDate:H,activityDurationDaysFixed:U,cacheUserStartLocation:N,userStartLocationCacheTTLMinutes:P,share:B,allowShareView:I,shareURLPrefix:z}=e;(0,i.useEffect)((()=>{if(!c){const e="diana-block-"+Math.random().toString(36).substring(2,11);r({widgetId:e})}}),[c,r]);const R=[{label:(0,n.__)("Coordinates (lat,lon)","diana-greenconnect"),value:"coordinates"},{label:(0,n.__)("Address","diana-greenconnect"),value:"address"},{label:(0,n.__)("Station ID","diana-greenconnect"),value:"station"}],F=[{label:(0,n.__)("English","diana-greenconnect"),value:"EN"},{label:(0,n.__)("German","diana-greenconnect"),value:"DE"}];return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(a.InspectorControls,{children:[(0,o.jsxs)(t.PanelBody,{title:(0,n.__)("Activity Details","diana-greenconnect"),initialOpen:!0,children:[(0,o.jsx)(t.TextControl,{label:(0,n.__)("Activity Name","diana-greenconnect"),value:d,onChange:e=>r({activityName:e}),help:(0,n.__)("e.g., Hiking Trip, Museum Visit","diana-greenconnect")}),(0,o.jsx)(t.TextControl,{label:(0,n.__)("Activity Type","diana-greenconnect"),value:s,onChange:e=>r({activityType:e}),help:(0,n.__)("Internal type identifier, e.g., Hiking, Sightseeing","diana-greenconnect")}),(0,o.jsx)(t.TextControl,{label:(0,n.__)("Activity Duration (minutes)","diana-greenconnect"),type:"number",value:C,onChange:e=>r({activityDurationMinutes:e}),help:(0,n.__)("e.g., 120 for 2 hours","diana-greenconnect")})]}),(0,o.jsxs)(t.PanelBody,{title:(0,n.__)("Start Location","diana-greenconnect"),initialOpen:!1,children:[(0,o.jsx)(t.TextareaControl,{label:(0,n.__)("Start Location (Coordinates or Address)","diana-greenconnect"),value:g,onChange:e=>r({activityStartLocation:e}),help:(0,n.__)('Enter coordinates as "lat,lon" or a full address.',"diana-greenconnect")}),(0,o.jsx)(t.SelectControl,{label:(0,n.__)("Start Location Type","diana-greenconnect"),value:h,options:R,onChange:e=>r({activityStartLocationType:e})}),(0,o.jsx)(t.TextControl,{label:(0,n.__)("Start Location Display Name (Optional)","diana-greenconnect"),value:b,onChange:e=>r({activityStartLocationDisplayName:e}),help:(0,n.__)("Custom name to display for the start location.","diana-greenconnect")})]}),(0,o.jsxs)(t.PanelBody,{title:(0,n.__)("End Location","diana-greenconnect"),initialOpen:!1,children:[(0,o.jsx)(t.TextareaControl,{label:(0,n.__)("End Location (Coordinates or Address)","diana-greenconnect"),value:_,onChange:e=>r({activityEndLocation:e}),help:(0,n.__)('Enter coordinates as "lat,lon" or a full address.',"diana-greenconnect")}),(0,o.jsx)(t.SelectControl,{label:(0,n.__)("End Location Type","diana-greenconnect"),value:p,options:R,onChange:e=>r({activityEndLocationType:e})}),(0,o.jsx)(t.TextControl,{label:(0,n.__)("End Location Display Name (Optional)","diana-greenconnect"),value:T,onChange:e=>r({activityEndLocationDisplayName:e}),help:(0,n.__)("Custom name to display for the end location.","diana-greenconnect")})]}),(0,o.jsxs)(t.PanelBody,{title:(0,n.__)("Activity Time Constraints","diana-greenconnect"),initialOpen:!1,children:[(0,o.jsx)(t.TextControl,{label:(0,n.__)("Earliest Start Time (HH:MM or HH:MM:SS)","diana-greenconnect"),value:v,onChange:e=>r({activityEarliestStartTime:e}),placeholder:"09:00:00"}),(0,o.jsx)(t.TextControl,{label:(0,n.__)("Latest Start Time (HH:MM or HH:MM:SS)","diana-greenconnect"),value:y,onChange:e=>r({activityLatestStartTime:e}),placeholder:"17:00:00"}),(0,o.jsx)(t.TextControl,{label:(0,n.__)("Earliest End Time (HH:MM or HH:MM:SS)","diana-greenconnect"),value:u,onChange:e=>r({activityEarliestEndTime:e}),placeholder:"10:00:00"}),(0,o.jsx)(t.TextControl,{label:(0,n.__)("Latest End Time (HH:MM or HH:MM:SS)","diana-greenconnect"),value:x,onChange:e=>r({activityLatestEndTime:e}),placeholder:"18:00:00"})]}),(0,o.jsxs)(t.PanelBody,{title:(0,n.__)("Localization & Display","diana-greenconnect"),initialOpen:!1,children:[(0,o.jsx)(t.TextControl,{label:(0,n.__)("Timezone","diana-greenconnect"),value:m,onChange:e=>r({timezone:e}),help:(0,o.jsxs)(o.Fragment,{children:[(0,n.__)("IANA timezone name, e.g., Europe/Vienna. ","diana-greenconnect"),(0,o.jsx)(t.ExternalLink,{href:"https://en.wikipedia.org/wiki/List_of_tz_database_time_zones",children:(0,n.__)("List of timezones","diana-greenconnect")})]}),placeholder:"Europe/Vienna"}),(0,o.jsx)(t.SelectControl,{label:(0,n.__)("Language","diana-greenconnect"),value:j,options:F,onChange:e=>r({language:e})}),(0,o.jsx)(t.TextControl,{label:(0,n.__)("Activity Start Time Label (Optional)","diana-greenconnect"),value:S,onChange:e=>r({activityStartTimeLabel:e}),help:(0,n.__)('Custom label for "Activity Start".',"diana-greenconnect")}),(0,o.jsx)(t.TextControl,{label:(0,n.__)("Activity End Time Label (Optional)","diana-greenconnect"),value:L,onChange:e=>r({activityEndTimeLabel:e}),help:(0,n.__)('Custom label for "Activity End".',"diana-greenconnect")}),(0,o.jsx)(t.TextControl,{label:(0,n.__)("Destination Input Name (Optional)","diana-greenconnect"),value:O,onChange:e=>r({destinationInputName:e}),help:(0,n.__)("Placeholder for the disabled input field for the destination.","diana-greenconnect")}),(0,o.jsx)(t.TextControl,{label:(0,n.__)("Display Start Date (Optional)","diana-greenconnect"),value:E,onChange:e=>r({displayStartDate:e}),help:(0,n.__)("Start date (YYYY-MM-DD) for widget visibility. If set, the widget will only display on or after this date.","diana-greenconnect"),placeholder:"YYYY-MM-DD"}),(0,o.jsx)(t.TextControl,{label:(0,n.__)("Display End Date (Optional)","diana-greenconnect"),value:M,onChange:e=>r({displayEndDate:e}),help:(0,n.__)("End date (YYYY-MM-DD) for widget visibility. If set, the widget will only display on or before this date.","diana-greenconnect"),placeholder:"YYYY-MM-DD"})]}),(0,o.jsxs)(t.PanelBody,{title:(0,n.__)("Multiday","diana-greenconnect"),initialOpen:!1,children:[(0,o.jsx)(t.ToggleControl,{label:(0,n.__)("Enable Multiday Mode","diana-greenconnect"),checked:A,onChange:e=>r({multiday:e}),help:(0,n.__)("Allows selecting a date range for the activity.","diana-greenconnect")}),(0,o.jsx)(t.TextControl,{label:(0,n.__)("Override Activity Start Date (Optional)","diana-greenconnect"),value:k,onChange:e=>r({overrideActivityStartDate:e}),help:(0,n.__)("Override activity start date with this date (YYYY-MM-DD). Can also be used for single-day activities.","diana-greenconnect"),placeholder:"YYYY-MM-DD"}),(0,o.jsx)(t.TextControl,{label:(0,n.__)("Override Activity End Date (Optional)","diana-greenconnect"),value:H,onChange:e=>r({overrideActivityEndDate:e}),help:(0,n.__)("Override activity end date with this date (YYYY-MM-DD).","diana-greenconnect"),placeholder:"YYYY-MM-DD",disabled:!A}),(0,o.jsx)(t.TextControl,{label:(0,n.__)("Fixed Activity Duration (Days)","diana-greenconnect"),type:"number",value:U,onChange:e=>r({activityDurationDaysFixed:parseInt(e,10)||0}),help:(0,n.__)("Set a fixed duration in days for the activity date range picker.","diana-greenconnect"),disabled:!A})]}),(0,o.jsxs)(t.PanelBody,{title:(0,n.__)("Caching & Sharing","diana-greenconnect"),initialOpen:!1,children:[(0,o.jsx)(t.ToggleControl,{label:(0,n.__)("Enable User Start Location Caching","diana-greenconnect"),checked:N,onChange:e=>r({cacheUserStartLocation:e}),help:(0,n.__)("Cache the user's last entered start location in their browser.","diana-greenconnect")}),(0,o.jsx)(t.TextControl,{label:(0,n.__)("Cache TTL (minutes)","diana-greenconnect"),type:"number",value:P,onChange:e=>r({userStartLocationCacheTTLMinutes:parseInt(e,10)||15}),help:(0,n.__)("How long to cache the location. Default: 15.","diana-greenconnect"),disabled:!N}),(0,o.jsx)(t.ToggleControl,{label:(0,n.__)("Enable Share Button","diana-greenconnect"),checked:B,onChange:e=>r({share:e}),help:(0,n.__)("Show a share button in the widget menu.","diana-greenconnect")}),(0,o.jsx)(t.ToggleControl,{label:(0,n.__)("Allow Share View","diana-greenconnect"),checked:I,onChange:e=>r({allowShareView:e}),help:(0,n.__)('Allow the widget to be displayed in a read-only "share view" via a URL parameter.',"diana-greenconnect"),disabled:!B}),(0,o.jsx)(t.TextControl,{label:(0,n.__)("Share URL Prefix (Optional)","diana-greenconnect"),value:z,onChange:e=>r({shareURLPrefix:e}),help:(0,n.__)("Base URL for share links. Defaults to the current page URL.","diana-greenconnect"),disabled:!B})]}),(0,o.jsxs)(t.PanelBody,{title:(0,n.__)("Advanced & Styling","diana-greenconnect"),initialOpen:!1,children:[(0,o.jsx)(t.TextControl,{label:(0,n.__)("API Base URL","diana-greenconnect"),value:D,onChange:e=>r({apiBaseUrl:e}),help:(0,n.__)("Default: https://api.zuugle-services.net","diana-greenconnect")}),(0,o.jsx)(t.TextControl,{label:(0,n.__)("Widget Container Max Height","diana-greenconnect"),value:Y,onChange:e=>r({containerMaxHeight:e}),help:(0,n.__)("e.g., 600px, 80vh, none. Default: 600px","diana-greenconnect"),placeholder:"600px"}),(0,o.jsx)(t.TextControl,{label:(0,n.__)("Override User Start Location","diana-greenconnect"),value:f,onChange:e=>r({overrideUserStartLocation:e}),help:(0,n.__)("Permanently set the user's starting point.","diana-greenconnect")}),(0,o.jsx)(t.SelectControl,{label:(0,n.__)("Override User Start Location Type","diana-greenconnect"),value:w,options:R,onChange:e=>r({overrideUserStartLocationType:e})})]})]}),(0,o.jsx)("div",{...l,children:(0,o.jsxs)("div",{className:"diana-greenconnect-editor-preview",children:[(0,o.jsx)("h4",{children:(0,n.__)("Diana GreenConnect Widget","diana-greenconnect")}),(0,o.jsxs)("p",{children:[(0,n.__)("Activity:","diana-greenconnect")," ",d||(0,n.__)("Not set","diana-greenconnect")]}),(0,o.jsx)("p",{children:(0,n.__)("This block will display the Diana GreenConnect Widget on the frontend. Configure API credentials under Settings > Diana GreenConnect Widget.","diana-greenconnect")}),(0,o.jsx)("p",{children:(0,o.jsx)("em",{children:(0,n.__)("Frontend preview may differ.","diana-greenconnect")})})]})})]})}})}},a={};function t(e){var i=a[e];if(void 0!==i)return i.exports;var o=a[e]={exports:{}};return n[e](o,o.exports,t),o.exports}t.m=n,e=[],t.O=(n,a,i,o)=>{if(!a){var r=1/0;for(s=0;s<e.length;s++){for(var[a,i,o]=e[s],l=!0,c=0;c<a.length;c++)(!1&o||r>=o)&&Object.keys(t.O).every((e=>t.O[e](a[c])))?a.splice(c--,1):(l=!1,o<r&&(r=o));if(l){e.splice(s--,1);var d=i();void 0!==d&&(n=d)}}return n}o=o||0;for(var s=e.length;s>0&&e[s-1][2]>o;s--)e[s]=e[s-1];e[s]=[a,i,o]},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e={85:0,305:0};t.O.j=n=>0===e[n];var n=(n,a)=>{var i,o,[r,l,c]=a,d=0;if(r.some((n=>0!==e[n]))){for(i in l)t.o(l,i)&&(t.m[i]=l[i]);if(c)var s=c(t)}for(n&&n(a);d<r.length;d++)o=r[d],t.o(e,o)&&e[o]&&e[o][0](),e[o]=0;return t.O(s)},a=globalThis.webpackChunkdiana_greenconnect=globalThis.webpackChunkdiana_greenconnect||[];a.forEach(n.bind(null,0)),a.push=n.bind(null,a.push.bind(a))})();var i=t.O(void 0,[305],(()=>t(697)));i=t.O(i)})();